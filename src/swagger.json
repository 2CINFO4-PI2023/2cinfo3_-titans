{
  "openapi": "3.0.0",
  "info": {
    "title": "Pureplats API",
    "version": "1.0.0",
    "description": "API for managing Pureplats apps"
  },
  
  "paths": {
    "/reclamations": {
      "post": {
        "summary": "Create a new reclamation",
        "operationId": "createReclamation",
        "tags": ["Reclamations"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reclamation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Reclamation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created reclamation"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all reclamations",
        "operationId": "getAllReclamations",
        "tags": ["Reclamations"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reclamation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/reclamations/{id}": {
      "get": {
        "summary": "Get a reclamation by ID",
        "operationId": "getReclamationById",
        "tags": ["Reclamations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the reclamation"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reclamation"
                }
              }
            }
          },
          "404": {
            "description": "Reclamation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a reclamation",
        "operationId": "updateReclamation",
        "tags": ["Reclamations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the reclamation"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reclamation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reclamation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reclamation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Reclamation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a reclamation",
        "operationId": "deleteReclamation",
        "tags": ["Reclamations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the reclamation"
          }
        ],
        "responses": {
          "204": {
            "description": "Reclamation deleted successfully"
          },
          "404": {
            "description": "Reclamation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "operationId": "getUserById",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Reclamation": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Type of Reclamation"
          },
          "name": {
            "type": "string",
            "description": "Name of the Person"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone Number"
          },
          "type": {
            "type": "string",
            "description": "Type of reclamation"
          }
        },
        "required": ["message", "name", "email", "phone", "type"]
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the User"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone Number"
          }
        },
        "required": ["name", "email", "phone"]
      }
    }
  },
  "tags": [
    {
      "name": "Reclamations",
      "description": "APIs for managing reclamations"
    },
    {
      "name": "Users",
      "description": "APIs for managing users"
    }
  ]
}
